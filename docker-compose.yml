services:
  postgres:
    image: postgres:14
    container_name: portfolio-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-portfolio}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - portfolio-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-portfolio} || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  directus:
    image: directus/directus:latest
    container_name: portfolio-directus
    ports:
      - "8055:8055"
    environment:
      KEY: ${DIRECTUS_KEY:-dgedrrgfhdgsgsg}
      SECRET: ${DIRECTUS_SECRET:-ehrtyjegdzsargdrtgehgdgdger}
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL:-yousef.baitalmal@gmail.com}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD:-applejuice}

      DB_CLIENT: pg
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${POSTGRES_DB:-portfolio}
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DB_POOL_ENABLED: 'true'
      DB_POOL_MIN: '1'
      DB_POOL_MAX: '15'

      PUBLIC_URL: ${DIRECTUS_PUBLIC_URL:-http://localhost:8055}
      SERVER_HOST: '0.0.0.0'
      SERVER_PORT: '8055'

      # CORS Configuration
      CORS_ENABLED: 'true'
      CORS_ORIGIN: '*'
      CORS_METHODS: 'GET,POST,PATCH,DELETE,OPTIONS,PUT,HEAD'
      CORS_ALLOWED_HEADERS: 'Content-Type,Authorization,X-Requested-With,Origin,Accept,Content-Range,Content-Disposition,Content-Length,Range,Access-Control-Allow-Origin,Access-Control-Allow-Credentials'
      CORS_EXPOSED_HEADERS: 'Content-Range,X-Total-Count,Content-Length,Content-Type,Content-Disposition,Authorization,Access-Control-Allow-Origin,Access-Control-Allow-Credentials'
      CORS_CREDENTIALS: 'true'
      
      # Performance
      CACHE_ENABLED: 'true'
      CACHE_STORE: 'memory'
      CACHE_TTL: '600'
      
      # Security
      RATE_LIMITER_ENABLED: 'true'
      RATE_LIMITER_POINTS: 100
      RATE_LIMITER_DURATION: 1
      
      # Logging
      LOG_LEVEL: 'info'
      LOG_STYLE: 'raw'
      
    volumes:
      - directus-uploads:/directus/uploads
      - directus-data:/directus/data
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8055/server/ping || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - portfolio-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: portfolio-frontend
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NODE_OPTIONS=--max-old-space-size=4096
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_API_URL=http://directus:8055
      - DIRECTUS_STATIC_TOKEN=${DIRECTUS_STATIC_TOKEN:-}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
      - /app/frontend/.next
    working_dir: /app/frontend
    stdin_open: true
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
      directus:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  portfolio-network:
    driver: bridge

volumes:
  postgres-data:
  directus-uploads:
  directus-data:
  frontend-node-modules:
  frontend-next:
  frontend-vite:
