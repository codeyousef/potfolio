services:
  postgres:
    image: postgres:14
    container_name: portfolio-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-portfolio}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - portfolio-network

  directus:
    image: directus/directus:latest
    container_name: portfolio-directus
    ports:
      - "8055:8055"
    environment:
      KEY: ${DIRECTUS_KEY:-your-strong-random-key}
      SECRET: ${DIRECTUS_SECRET:-your-super-strong-random-secret}
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD:-Password123!}

      DB_CLIENT: pg
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${POSTGRES_DB:-portfolio}
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}

      PUBLIC_URL: ${DIRECTUS_PUBLIC_URL:-http://localhost:8055}
    volumes:
      - directus-uploads:/directus/uploads
      - directus-data:/directus/data
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - portfolio-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend-dev
    container_name: portfolio-frontend
    environment:
      NEXT_PUBLIC_API_URL: ${DIRECTUS_PUBLIC_URL:-http://localhost:8055}
      NODE_ENV: development
      # For Windows/macOS, if HMR is still flaky, uncomment the next line:
      WATCHPACK_POLLING: "true"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
      # - /app/frontend/.next
    depends_on:
      - directus
    restart: unless-stopped
    networks:
      - portfolio-network

networks:
  portfolio-network:
    driver: bridge

volumes:
  postgres-data:
  directus-uploads:
  directus-data:
