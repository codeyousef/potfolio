/* DIGITAL CHAOS ENGINE - Core Styles */

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* NEON BRUTALISM COLOR SYSTEM */
    --violence-pink: #FF006E;
    --toxic-green: #00F5FF;
    --warning-yellow: #FFBE0B;
    --void-black: #000000;
    --ghost-white: #FFFFFF;
    
    /* Glitch effect colors */
    --glitch-1: #00FFFF;
    --glitch-2: #FF00FF;
    --glitch-3: #FFFF00;
    
    /* Dynamic chaos color - will be set via JS */
    --chaos-color: hsl(var(--random-hue, 0), 100%, 50%);
    --mouse-x: 0;
    --mouse-y: 0;
    
    /* Typography scales - EXTREME */
    --text-hero: clamp(8rem, 15vw, 20rem);
    --text-subhero: clamp(0.5rem, 1vw, 0.75rem);
    --text-body: clamp(1rem, 1.2vw, 1.5rem);
    --text-random: calc(1rem + var(--mouse-x) * 0.5rem);
  }
  
  /* Reset and global chaos settings */
  * {
    cursor: none !important; /* We'll use custom cursor */
    box-sizing: border-box;
  }
  
  html {
    overflow-x: hidden;
    scroll-behavior: auto !important;
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
  }
  
  body {
    background: var(--void-black);
    color: var(--ghost-white);
    overflow-x: hidden;
    margin: 0;
    padding: 0;
    width: 100%;
    min-height: 100vh;
    font-family: var(--font-body), system-ui, sans-serif;
  }
  
  /* Ensure main container doesn't cause overflow */
  #chaos-root {
    width: 100%;
    overflow-x: hidden;
  }
  
  /* Font definitions */
  .font-display, h1, h2, h3, h4, h5, h6 {
    font-family: var(--font-distortion), Arial Black, sans-serif;
    font-weight: 900;
  }
  
  .font-mono, code, pre {
    font-family: var(--font-mono), 'Courier New', monospace;
  }
}

/* GLITCH EFFECTS */
.glitch {
  position: relative;
  color: var(--ghost-white);
  font-size: inherit;
  font-weight: inherit;
  text-transform: uppercase;
  text-shadow: 
    0.05em 0 0 var(--violence-pink),
    -0.025em -0.05em 0 var(--toxic-green),
    0.025em 0.05em 0 var(--warning-yellow);
  animation: glitch 500ms infinite;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch::before {
  animation: glitch-1 650ms infinite;
  clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
  transform: translate(-0.025em, -0.0125em);
  opacity: 0.8;
}

.glitch::after {
  animation: glitch-2 375ms infinite;
  clip-path: polygon(0 80%, 100% 20%, 100% 100%, 0 100%);
  transform: translate(0.0125em, 0.025em);
  opacity: 0.8;
}

@keyframes glitch {
  0% {
    text-shadow: 
      0.05em 0 0 var(--violence-pink),
      -0.05em -0.025em 0 var(--toxic-green),
      0.025em 0.05em 0 var(--warning-yellow);
  }
  14% {
    text-shadow: 
      0.05em 0 0 var(--violence-pink),
      -0.05em -0.025em 0 var(--toxic-green),
      0.025em 0.05em 0 var(--warning-yellow);
  }
  15% {
    text-shadow: 
      -0.05em -0.025em 0 var(--violence-pink),
      0.025em 0.025em 0 var(--toxic-green),
      -0.05em -0.05em 0 var(--warning-yellow);
  }
  49% {
    text-shadow: 
      -0.05em -0.025em 0 var(--violence-pink),
      0.025em 0.025em 0 var(--toxic-green),
      -0.05em -0.05em 0 var(--warning-yellow);
  }
  50% {
    text-shadow: 
      0.025em 0.05em 0 var(--violence-pink),
      0.05em 0 0 var(--toxic-green),
      0 -0.05em 0 var(--warning-yellow);
  }
  99% {
    text-shadow: 
      0.025em 0.05em 0 var(--violence-pink),
      0.05em 0 0 var(--toxic-green),
      0 -0.05em 0 var(--warning-yellow);
  }
  100% {
    text-shadow: 
      -0.025em 0 0 var(--violence-pink),
      -0.025em -0.025em 0 var(--toxic-green),
      -0.025em -0.05em 0 var(--warning-yellow);
  }
}

@keyframes glitch-1 {
  0% {
    clip-path: polygon(0 2%, 100% 2%, 100% 5%, 0 5%);
  }
  5% {
    clip-path: polygon(0 15%, 100% 15%, 100% 15%, 0 15%);
  }
  10% {
    clip-path: polygon(0 10%, 100% 10%, 100% 20%, 0 20%);
  }
  25% {
    clip-path: polygon(0 1%, 100% 1%, 100% 2%, 0 2%);
  }
  50% {
    clip-path: polygon(0 33%, 100% 33%, 100% 33%, 0 33%);
  }
  51% {
    clip-path: polygon(0 44%, 100% 44%, 100% 44%, 0 44%);
  }
}

@keyframes glitch-2 {
  0% {
    clip-path: polygon(0 65%, 100% 65%, 100% 80%, 0 80%);
  }
  5% {
    clip-path: polygon(0 80%, 100% 80%, 100% 90%, 0 90%);
  }
  10% {
    clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%);
  }
  25% {
    clip-path: polygon(0 70%, 100% 70%, 100% 80%, 0 80%);
  }
  50% {
    clip-path: polygon(0 80%, 100% 80%, 100% 82%, 0 82%);
  }
  51% {
    clip-path: polygon(0 50%, 100% 50%, 100% 60%, 0 60%);
  }
}

/* EXPLOSIVE NAVIGATION */
.nav-explosion {
  position: fixed;
  width: 100%;
  height: 100vh;
  pointer-events: none;
  z-index: 1000;
}

.nav-item {
  position: absolute;
  pointer-events: all;
  cursor: pointer;
  transition: none;
  font-weight: 900;
  text-transform: uppercase;
  transform-origin: center;
}

.nav-item:hover {
  animation: nav-freakout 200ms ease-out;
}

@keyframes nav-freakout {
  0% { transform: scale(1) rotate(var(--rotation)); }
  25% { transform: scale(1.2) rotate(calc(var(--rotation) + 10deg)); }
  50% { transform: scale(0.9) rotate(calc(var(--rotation) - 10deg)); }
  75% { transform: scale(1.1) rotate(calc(var(--rotation) + 5deg)); }
  100% { transform: scale(1) rotate(var(--rotation)); }
}

/* CHAOS CURSOR */
.chaos-cursor {
  position: fixed;
  width: 40px;
  height: 40px;
  pointer-events: none;
  z-index: 9999;
  mix-blend-mode: difference;
}

.chaos-cursor-inner {
  position: absolute;
  width: 100%;
  height: 100%;
  border: 3px solid var(--ghost-white);
  transition: transform 0.2s ease-out;
}

.chaos-cursor.stuck {
  animation: cursor-struggle 500ms infinite;
}

@keyframes cursor-struggle {
  0%, 100% { transform: translate(0, 0); }
  25% { transform: translate(-5px, 5px); }
  50% { transform: translate(5px, -5px); }
  75% { transform: translate(-5px, -5px); }
}

/* TEXT SPLITTING EFFECT */
.split-text {
  display: inline-block;
}

.split-text .char {
  display: inline-block;
  transition: transform 0.3s ease-out;
}

.split-text:hover .char {
  animation: char-dance 500ms ease-out;
  animation-delay: calc(var(--char-index) * 50ms);
}

@keyframes char-dance {
  0%, 100% { transform: translateY(0) rotate(0); }
  50% { transform: translateY(-20px) rotate(calc(var(--char-index) * 10deg - 50deg)); }
}

/* VORTEX EFFECT */
.vortex-container {
  position: relative;
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

.vortex-item {
  position: absolute;
  left: 50%;
  top: 50%;
  transform-origin: center;
  transition: transform 0.5s cubic-bezier(0.23, 1, 0.32, 1);
}

/* LOADING CHAOS */
.chaos-loader {
  position: fixed;
  inset: 0;
  background: var(--void-black);
  z-index: 10000;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
  font-weight: 900;
  text-transform: uppercase;
}

.chaos-loader-text {
  animation: loader-glitch 200ms infinite;
}

@keyframes loader-glitch {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(2px, -2px); }
}

/* RESPONSIVE CHAOS */
@media (max-width: 768px) {
  :root {
    --text-hero: clamp(4rem, 20vw, 10rem);
    --text-subhero: clamp(0.75rem, 2vw, 1rem);
  }
  
  .nav-item {
    font-size: clamp(1rem, 4vw, 2rem);
  }
}

/* PERFORMANCE MODE */
@media (prefers-reduced-motion: reduce) {
  * {
    animation: none !important;
    transition: none !important;
  }
  
  .glitch::before,
  .glitch::after {
    display: none;
  }
}